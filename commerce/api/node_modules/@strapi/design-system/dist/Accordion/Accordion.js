import { jsxs as $, jsx as n } from "react/jsx-runtime";
import e from "styled-components";
import { Typography as t } from "../Typography/Typography.js";
import { useId as x } from "../helpers/useId.js";
import { Box as c } from "../Box/Box.js";
import { Flex as y } from "../Flex/Flex.js";
import { AccordionContext as g } from "./AccordionContext.js";
const b = ({
  theme: r,
  expanded: o,
  variant: i,
  disabled: d,
  error: a
}) => a ? `1px solid ${r.colors.danger600} !important` : d ? `1px solid ${r.colors.neutral150}` : o ? `1px solid ${r.colors.primary600}` : i === "primary" ? `1px solid ${r.colors.neutral0}` : `1px solid ${r.colors.neutral100}`, h = e(t)``, v = e(c)`
  border: ${b};

  &:hover:not([aria-disabled='true']) {
    border: 1px solid ${({
  theme: r
}) => r.colors.primary600};

    ${h} {
      color: ${({
  theme: r,
  expanded: o
}) => o ? void 0 : r.colors.primary700};
    }

    ${t} {
      color: ${({
  theme: r,
  expanded: o
}) => o ? void 0 : r.colors.primary600};
    }

    & > ${y} {
      background: ${({
  theme: r
}) => r.colors.primary100};
    }

    [data-strapi-dropdown='true'] {
      background: ${({
  theme: r
}) => r.colors.primary200};
    }
  }
`, w = ({
  children: r,
  disabled: o = !1,
  error: i,
  expanded: d = !1,
  hasErrorMessage: a = !0,
  id: s,
  onToggle: l,
  toggle: u,
  size: m = "M",
  variant: p = "primary"
}) => {
  const f = x("accordion", s);
  return $(g.Provider, {
    value: {
      expanded: d,
      onToggle: l,
      toggle: u,
      id: f,
      size: m,
      variant: p,
      disabled: o
    },
    children: [n(v, {
      "data-strapi-expanded": d,
      disabled: o,
      "aria-disabled": o,
      expanded: d,
      hasRadius: !0,
      variant: p,
      error: i,
      children: r
    }), i && a && n(c, {
      paddingTop: 1,
      children: n(t, {
        variant: "pi",
        textColor: "danger600",
        children: i
      })
    })]
  });
};
export {
  w as Accordion,
  h as AccordionTypography
};
