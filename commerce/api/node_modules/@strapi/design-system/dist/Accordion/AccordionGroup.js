import { jsxs as l, jsx as o } from "react/jsx-runtime";
import { Children as u, cloneElement as b } from "react";
import t from "styled-components";
import { Box as e } from "../Box/Box.js";
import { Typography as n } from "../Typography/Typography.js";
import { Flex as m } from "../Flex/Flex.js";
import { KeyboardNavigable as $ } from "../KeyboardNavigable/KeyboardNavigable.js";
const h = t(e)`
  border-bottom: 1px solid ${({
  theme: r
}) => r.colors.neutral200};
  border-right: 1px solid ${({
  theme: r
}) => r.colors.neutral200};
  border-left: 1px solid ${({
  theme: r
}) => r.colors.neutral200};
  border-radius: 0 0 ${({
  theme: r
}) => r.borderRadius} ${({
  theme: r
}) => r.borderRadius};
`, x = t(e)`
  & > * {
    & > * {
      border-radius: unset;
    }
  }

  & > * {
    border-radius: unset;
    border-right: 1px solid ${({
  theme: r
}) => r.colors.neutral200};
    border-left: 1px solid ${({
  theme: r
}) => r.colors.neutral200};
    border-bottom: 1px solid ${({
  theme: r
}) => r.colors.neutral200};
  }

  & > *:first-of-type {
    border-top: 1px solid ${({
  theme: r
}) => r.colors.neutral200};
    border-radius: ${({
  theme: r
}) => r.borderRadius} ${({
  theme: r
}) => r.borderRadius} 0 0;
    & > * {
      border-radius: ${({
  theme: r
}) => r.borderRadius} ${({
  theme: r
}) => r.borderRadius} 0 0;
    }

    &:hover {
      border-top: 1px solid ${({
  theme: r
}) => r.colors.primary600};
    }
  }

  & [data-strapi-expanded='true'] {
    border: 1px solid ${({
  theme: r
}) => r.colors.primary600};
  }

  ${({
  theme: r,
  footer: d
}) => `
    &:not(${d}) {
      & > *:last-of-type {
        border-radius: 0 0 ${r.borderRadius} ${r.borderRadius};
      }
    }
  `}
`, f = t(e)`
  svg path {
    fill: ${({
  theme: r
}) => r.colors.neutral500};
  }
`, j = ({
  children: r,
  footer: d,
  label: i,
  labelAction: a,
  error: s
}) => {
  const p = u.toArray(r).map((c) => b(c, {
    hasErrorMessage: !1
  }));
  return l($, {
    attributeName: "data-strapi-accordion-toggle",
    children: [i && l(m, {
      paddingBottom: 1,
      children: [o(n, {
        variant: "pi",
        as: "label",
        textColor: "neutral800",
        fontWeight: "bold",
        children: i
      }), a && o(f, {
        paddingLeft: 1,
        children: a
      })]
    }), o(x, {
      footer: d,
      children: p
    }), d && o(h, {
      children: d
    }), s && o(e, {
      paddingTop: 1,
      children: o(n, {
        variant: "pi",
        textColor: "danger600",
        children: s
      })
    })]
  });
};
export {
  j as AccordionGroup
};
