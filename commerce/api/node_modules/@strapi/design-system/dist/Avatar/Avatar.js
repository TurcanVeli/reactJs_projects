import { jsxs as p, jsx as i } from "react/jsx-runtime";
import { useState as d } from "react";
import o from "styled-components";
import { Typography as c } from "../Typography/Typography.js";
import { Flex as h } from "../Flex/Flex.js";
import { avatarSize as e, previewSize as s } from "./constants.js";
const m = o.img`
  border-radius: 50%;
  object-fit: cover;
  display: block;
  position: relative;
`, u = o.div`
  position: relative;
  width: ${e / 16}rem;
  height: ${e / 16}rem;
  z-index: ${({
  hovering: t
}) => t ? 1 : void 0};
`, f = o.img`
  border-radius: 50%;
  object-fit: cover;
  position: absolute;
  transform: translate(-${(s - e) / 2}px, -100%);
  margin-top: -${({
  theme: t
}) => t.spaces[1]};
`, g = o.div`
  z-index: 1;
  border-radius: 30%;
  position: absolute;
  width: ${e / 16}rem;
  height: ${e / 16}rem;
  background: ${({
  theme: t
}) => t.colors.neutral0};
  opacity: 0.4;
`, z = ({
  src: t,
  alt: n,
  preview: r
}) => {
  const [a, l] = d(!1);
  return p("span", {
    children: [r && a ? i(f, {
      "aria-hidden": !0,
      alt: "",
      width: `${s}px`,
      height: `${s}px`,
      src: r === !0 ? t : r
    }) : null, p(u, {
      hovering: Boolean(r && a),
      onMouseEnter: () => l(!0),
      onMouseLeave: () => l(!1),
      children: [r && a ? i(g, {}) : null, i(m, {
        src: t,
        alt: n,
        width: `${e}px`,
        height: `${e}px`
      })]
    })]
  });
}, b = o(h)`
  span {
    line-height: 0;
  }
`, I = ({
  children: t,
  background: n = "primary600",
  textColor: r = "buttonNeutral0"
}) => i(b, {
  background: n,
  borderRadius: "50%",
  width: `${e}px`,
  height: `${e}px`,
  justifyContent: "center",
  children: i(c, {
    fontSize: 0,
    fontWeight: "bold",
    textColor: r,
    textTransform: "uppercase",
    children: t
  })
});
export {
  z as Avatar,
  I as Initials
};
