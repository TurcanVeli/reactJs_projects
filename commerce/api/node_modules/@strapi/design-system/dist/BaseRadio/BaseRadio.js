import { jsx as s } from "react/jsx-runtime";
import f, { useContext as u } from "react";
import b from "styled-components";
import { RadioContext as g } from "./context.js";
import { getRadioSize as r, getSelectedRadioSize as t, getSelectedRadioPosition as a } from "./utils.js";
const h = b.input`
  margin: 0;
  padding: 0;
  background-color: ${({
  theme: e
}) => e.colors.neutral0};
  border: 1px solid ${({
  theme: e
}) => e.colors.primary600};
  border-radius: 50%;
  height: ${({
  size: e
}) => typeof e == "number" ? e : r(e)};
  width: ${({
  size: e
}) => typeof e == "number" ? e : r(e)};
  -webkit-appearance: none;

  &:after {
    border-radius: 50%;
    content: '';
    position: relative;
    z-index: 1;
    display: block;
    height: ${({
  size: e
}) => typeof e == "number" ? e : t(e)};
    width: ${({
  size: e
}) => typeof e == "number" ? e : t(e)};
    left: ${a};
    top: ${a};
  }

  &:checked:after {
    background: ${({
  theme: e
}) => e.colors.primary600};
  }

  &:disabled {
    border: 1px solid ${({
  theme: e
}) => e.colors.neutral300};
    background: ${({
  theme: e
}) => e.colors.neutral200};
  }
`, $ = f.forwardRef(({
  value: e,
  disabled: d = !1,
  ...n
}, i) => {
  const {
    onChange: c,
    selected: l,
    name: p,
    size: m
  } = u(g), o = l === e;
  return s(h, {
    ref: i,
    type: "radio",
    name: p,
    value: e,
    tabIndex: o ? 0 : -1,
    "aria-checked": o,
    checked: o,
    disabled: d,
    size: m,
    onChange: c,
    ...n
  });
});
$.displayName = "Radio";
export {
  $ as BaseRadio
};
