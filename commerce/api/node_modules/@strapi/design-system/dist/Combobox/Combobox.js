import o, { useState as y, useRef as E, useEffect as U, useLayoutEffect as Ee, Children as _, cloneElement as xe } from "react";
import e from "prop-types";
import { Cross as ve, CarretDown as ye } from "@strapi/icons";
import { useId as Ie } from "../helpers/useId.js";
import { filterOptions as j, maintainScrollVisibility as ke, getActionFromKey as Oe, MenuActions as b, getUpdatedIndex as $ } from "./utils.js";
import { Flex as q } from "../Flex/Flex.js";
import { IconBox as Me, CaretBox as Le } from "../Select/components.js";
import { Popover as we } from "../Popover/Popover.js";
import { Box as $e } from "../Box/Box.js";
import { Typography as z } from "../Typography/Typography.js";
import { Loader as Re } from "../Loader/Loader.js";
import { MainRow as Se, InputContainer as Be, ValueContainer as De, Input as Fe } from "./components.js";
import { ComboboxOption as Te } from "./ComboboxOption.js";
import { ComboboxList as Ae } from "./ComboboxList.js";
import { Field as Pe } from "../Field/Field.js";
import { FieldLabel as Ve } from "../Field/FieldLabel.js";
import "../Field/FieldInput.js";
import { FieldHint as Ke } from "../Field/FieldHint.js";
import { FieldError as Ne } from "../Field/FieldError.js";
import "../Field/FieldContext.js";
import "../Field/FieldAction.js";
import { Stack as He } from "../Stack/Stack.js";
import { KeyboardKeys as Ue } from "../helpers/keyboardKeys.js";
import { VisuallyHidden as _e } from "../VisuallyHidden/VisuallyHidden.js";
const I = ({
  children: s,
  clearLabel: G,
  creatable: x,
  createMessage: J,
  disabled: c,
  error: M,
  hasMoreItems: Q,
  hint: R,
  label: g,
  labelAction: X,
  loading: L,
  loadingMessage: Y,
  noOptionsMessage: Z,
  onChange: S,
  onClear: B,
  onCreateOption: ee,
  onInputChange: D,
  onLoadMore: te,
  placeholder: oe,
  required: F,
  value: d,
  ...ne
}) => {
  const re = () => s.find((t) => t.props?.value.toLowerCase() === d.toLowerCase()).props?.children, [a, T] = y(0), [ae, ie] = y(null), [l, A] = y(s), [u, le] = y(!1), [r, k] = y(""), C = E(), O = E(!1), v = E(), P = E(), se = E(), V = E(!0), i = Ie("combobox"), K = `${i}-label`;
  if (!g && !ne["aria-label"])
    throw new Error('The Combobox component needs a "label" or an "aria-label" props');
  U(() => {
    A(j(s, r));
  }, [r, s]), U(() => {
    u && C.current && ke(C.current);
  }, [a, u]), Ee(() => {
    V.current && (V.current = !1);
  }, [d]);
  const ce = u ? `${i}-${a}` : "", N = () => {
    S(null), k("");
  }, pe = (t) => {
    D && D(t);
    const n = v.current.value;
    A(j(s, n)), T(0), ie(null), r !== n && k(n), u || f(!0, !1);
  }, de = (t) => {
    const { key: n } = t, p = x && r ? l.length : l.length - 1, h = Oe(n, u);
    switch (d && !r && n === Ue.BACKSPACE && N(), h) {
      case b.Next: {
        if (a === p) {
          m(0);
          break;
        }
        m($(a, p, h));
        break;
      }
      case b.Previous: {
        if (a === 0) {
          m(p);
          break;
        }
        m($(a, p, h));
        break;
      }
      case b.Last:
      case b.First: {
        if (a === p) {
          m(0);
          break;
        }
        m($(a, p, h));
        break;
      }
      case b.CloseSelect:
        t.preventDefault(), w(a);
        break;
      case b.Close:
        t.preventDefault(), f(!1);
        break;
      case b.Open:
        f(!0);
        break;
    }
  }, fe = (t) => {
    if (t.preventDefault(), d && !O.current && k(""), O.current) {
      O.current = !1;
      return;
    }
    f(!1, !1);
  }, m = (t) => {
    T(t);
  }, ue = (t) => {
    m(t), w(t);
  }, H = () => {
    O.current = !0;
  }, w = (t) => {
    const n = l[t];
    if (k(""), n) {
      S(n.props.value), f(!1);
      return;
    }
    x && (ee(r), f(!1));
  }, f = (t, n = !0) => {
    le(t), n && v.current.focus();
  }, me = _.toArray(l).map((t, n) => {
    const p = a === n;
    return xe(t, {
      id: `${i}-${n}`,
      "aria-selected": ae === n,
      "aria-posinset": n + 1,
      "aria-setsize": _.toArray(l).length,
      ref(h) {
        p && (C.current = h);
      },
      onClick: () => ue(n),
      onMouseDown: H,
      isSelected: p
    });
  }), be = () => {
    v.current.focus(), B && B(), N();
  }, ge = () => {
    v.current.focus(), f(!0);
  }, Ce = () => {
    const t = l.findIndex((n) => n.props?.children === r);
    return r && t === -1;
  }, he = (t) => {
    t.preventDefault(), f(t, !0);
  };
  return /* @__PURE__ */ o.createElement(Pe, {
    hint: R,
    error: M,
    id: i,
    required: F
  }, /* @__PURE__ */ o.createElement(_e, {
    "aria-live": "polite",
    "aria-atomic": "false",
    "aria-relevant": "additions text"
  }, d), /* @__PURE__ */ o.createElement(He, {
    spacing: g || R || M ? 1 : 0
  }, g && /* @__PURE__ */ o.createElement(Ve, {
    action: X
  }, g), /* @__PURE__ */ o.createElement(Se, {
    ref: P,
    $disabled: c,
    hasError: M
  }, /* @__PURE__ */ o.createElement(Be, {
    wrap: "wrap"
  }, !r && d && /* @__PURE__ */ o.createElement(De, {
    id: `${i}-selected-value`
  }, /* @__PURE__ */ o.createElement(z, null, re())), /* @__PURE__ */ o.createElement(Fe, {
    "aria-activedescendant": ce,
    "aria-autocomplete": "list",
    "aria-controls": `${i}-listbox`,
    "aria-disabled": c,
    "aria-expanded": u,
    "aria-haspopup": "listbox",
    "aria-labelledby": g ? K : void 0,
    autoComplete: "off",
    autoCorrect: "off",
    id: i,
    onBlur: c ? void 0 : fe,
    onClick: c ? void 0 : he,
    onInput: c ? void 0 : pe,
    onKeyDown: c ? void 0 : de,
    placeholder: d ? "" : oe,
    readOnly: c,
    ref: v,
    required: F,
    role: "combobox",
    spellCheck: "off",
    type: "text",
    value: r
  })), /* @__PURE__ */ o.createElement(q, null, (d || r) && /* @__PURE__ */ o.createElement(Me, {
    id: `${i}-clear`,
    "aria-label": G,
    disabled: c,
    paddingLeft: 3,
    as: "button",
    onClick: be,
    type: "button"
  }, /* @__PURE__ */ o.createElement(ve, null)), /* @__PURE__ */ o.createElement(Le, {
    disabled: c,
    paddingLeft: 3,
    "aria-hidden": !0,
    as: "button",
    onClick: ge,
    tabIndex: -1,
    type: "button"
  }, /* @__PURE__ */ o.createElement(ye, null)))), /* @__PURE__ */ o.createElement(Ke, null), /* @__PURE__ */ o.createElement(Ne, null)), u && /* @__PURE__ */ o.createElement(we, {
    id: `${i}-popover`,
    source: P,
    spacing: 4,
    fullWidth: !0,
    intersectionId: `${i}-listbox-popover-intersection`,
    onReachEnd: Q && !L ? te : void 0
  }, /* @__PURE__ */ o.createElement("div", {
    role: "listbox",
    ref: se,
    id: `${i}-listbox`,
    "aria-labelledby": g ? K : void 0
  }, (Boolean(l.length) || x) && /* @__PURE__ */ o.createElement(o.Fragment, null, /* @__PURE__ */ o.createElement(Ae, {
    activeOptionRef: C,
    options: me
  }), Ce() && x && /* @__PURE__ */ o.createElement(Te, {
    isSelected: a === l.length,
    ref: (t) => {
      a === l.length && (C.current = t);
    },
    onMouseDown: H,
    onClick: () => w(),
    taindex: 0
  }, J(r))), !l.length && !x && !L && /* @__PURE__ */ o.createElement($e, {
    paddingLeft: 4,
    paddingRight: 4,
    paddingTop: 2,
    paddingBottom: 2,
    ref: C
  }, /* @__PURE__ */ o.createElement(z, {
    textColor: "neutral800"
  }, Z(r))), L && /* @__PURE__ */ o.createElement(q, {
    justifyContent: "center",
    alignItems: "center",
    paddingTop: 2,
    paddingBottom: 2
  }, /* @__PURE__ */ o.createElement(Re, {
    small: !0
  }, Y)))));
}, W = (s) => /* @__PURE__ */ o.createElement(I, {
  ...s,
  creatable: !0
});
I.defaultProps = {
  "aria-label": void 0,
  clearLabel: "clear",
  creatable: !1,
  createMessage: (s) => `Create "${s}"`,
  disabled: !1,
  error: void 0,
  hasMoreItems: !1,
  hint: void 0,
  label: void 0,
  loading: !1,
  loadingMessage: "Loading content...",
  noOptionsMessage: () => "No results found",
  onClear: void 0,
  onCreateOption: void 0,
  onInputChange: void 0,
  onLoadMore: void 0,
  placeholder: "Select or enter a value",
  value: void 0
};
W.defaultProps = I.defaultProps;
I.propTypes = {
  "aria-label": e.string,
  children: e.oneOfType([e.arrayOf(e.node), e.node]),
  clearLabel: e.string,
  creatable: e.bool,
  createMessage: e.func,
  disabled: e.bool,
  error: e.string,
  hasMoreItems: e.bool,
  hint: e.oneOfType([e.string, e.node, e.arrayOf(e.node)]),
  label: e.string,
  labelAction: e.element,
  loading: e.bool,
  loadingMessage: e.string,
  noOptionsMessage: e.func,
  onChange: e.func.isRequired,
  onClear: e.func,
  onCreateOption: e.func,
  onInputChange: e.func,
  onLoadMore: e.func,
  placeholder: e.string,
  value: e.string
};
W.propTypes = {
  ...I.propTypes,
  onCreateOption: e.func.isRequired
};
export {
  I as Combobox,
  W as CreatableCombobox
};
