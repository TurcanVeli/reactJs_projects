import e from "react";
import i from "prop-types";
import r from "styled-components";
import "../RawTable/RawTable.js";
import { RawTh as n } from "../RawTable/RawCell.js";
import "../RawTable/RawThead.js";
import "../RawTable/RawTbody.js";
import "../RawTable/RawTr.js";
import { Typography as a } from "../Typography/Typography.js";
import { VisuallyHidden as m } from "../VisuallyHidden/VisuallyHidden.js";
import { Flex as p } from "../Flex/Flex.js";
const l = r(n)`
  // Trick to prevent the outline from overflowing because of the general outline-offset
  outline-offset: -2px;
  border-radius: ${({ theme: t }) => t.borderRadius};
  text-transform: capitalize;
`, s = r(p)`
  height: ${24 / 16}rem;
  width: ${32 / 16}rem;
`, f = ({ children: t, ...o }) => /* @__PURE__ */ e.createElement(l, {
  ...o
}, /* @__PURE__ */ e.createElement(s, {
  justifyContent: "center"
}, /* @__PURE__ */ e.createElement(a, {
  variant: "pi",
  fontWeight: "bold",
  color: "neutral800",
  "aria-hidden": !0
}, t.substr(0, 2)), /* @__PURE__ */ e.createElement(m, null, /* @__PURE__ */ e.createElement("span", null, t))));
f.propTypes = {
  children: i.string.isRequired
};
export {
  f as DatePickerTh
};
