import r from "prop-types";
import o from "react";
import t from "styled-components";
import { Box as n } from "../Box/Box.js";
import { FocusTrap as c } from "../FocusTrap/FocusTrap.js";
import { Portal as f } from "../Portal/Portal.js";
import { Flex as g } from "../Flex/Flex.js";
import { Typography as y } from "../Typography/Typography.js";
import { DismissibleLayer as b } from "../DismissibleLayer/DismissibleLayer.js";
import { setOpacity as E } from "../helpers/setOpacity.js";
import h from "../helpers/useLockScroll.js";
import { useId as D } from "../helpers/useId.js";
const x = t.div`
  position: fixed;
  z-index: 4;
  inset: 0;
  background: ${({ theme: e }) => E(e.colors.neutral800, 0.2)};
  padding: 0 ${({ theme: e }) => e.spaces[8]};
`, w = t(n)`
  max-width: ${412 / 16}rem;
  margin: 0 auto;
  overflow: hidden;
  margin-top: 10%;
`, R = t(g)`
  border-bottom: 1px solid ${({ theme: e }) => e.colors.neutral150};
`, a = ({ onClose: e, title: m, as: s, isOpen: i, id: d, ...p }) => {
  const u = D("dialog", d);
  if (h(i), !i)
    return null;
  const l = `${u}-label`;
  return /* @__PURE__ */ o.createElement(f, null, /* @__PURE__ */ o.createElement(x, null, /* @__PURE__ */ o.createElement(c, null, /* @__PURE__ */ o.createElement(b, {
    onEscapeKeyDown: e,
    onPointerDownOutside: e
  }, /* @__PURE__ */ o.createElement(w, {
    "aria-labelledby": l,
    "aria-modal": !0,
    background: "neutral0",
    hasRadius: !0,
    shadow: "popupShadow",
    role: "dialog"
  }, /* @__PURE__ */ o.createElement(R, {
    padding: 6,
    justifyContent: "center"
  }, /* @__PURE__ */ o.createElement(y, {
    variant: "beta",
    as: s || "h2",
    id: l
  }, m)), /* @__PURE__ */ o.createElement(n, {
    ...p
  }))))));
};
a.displayName = "Dialog";
a.defaultProps = {
  as: "h2",
  id: void 0
};
a.propTypes = {
  as: r.string,
  id: r.oneOfType([r.string, r.number]),
  isOpen: r.bool.isRequired,
  onClose: r.func.isRequired,
  title: r.string.isRequired
};
export {
  a as Dialog
};
