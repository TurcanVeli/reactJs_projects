import o from "react";
import t from "styled-components";
import r from "prop-types";
import { Box as n } from "../Box/Box.js";
import { FocusTrap as m } from "../FocusTrap/FocusTrap.js";
import { Portal as p } from "../Portal/Portal.js";
import { ModalContext as s } from "./ModalContext.js";
import { DismissibleLayer as d } from "../DismissibleLayer/DismissibleLayer.js";
import c from "../helpers/useLockScroll.js";
const u = t.div`
  position: fixed;
  z-index: 4;
  inset: 0;
  background: ${({ theme: e }) => `${e.colors.neutral800}1F`};
  padding: 0 ${({ theme: e }) => e.spaces[8]};
  display: flex;
  align-items: center;
  justify-content: center;
`, f = t(n)`
  width: ${830 / 16}rem;
`, y = ({ onClose: e, labelledBy: a, ...i }) => (c(!0), /* @__PURE__ */ o.createElement(p, null, /* @__PURE__ */ o.createElement(s.Provider, {
  value: e
}, /* @__PURE__ */ o.createElement(u, null, /* @__PURE__ */ o.createElement(m, null, /* @__PURE__ */ o.createElement(d, {
  onEscapeKeyDown: e,
  onPointerDownOutside: e
}, /* @__PURE__ */ o.createElement(f, {
  "aria-labelledby": a,
  onClick: (l) => l.stopPropagation(),
  background: "neutral0",
  hasRadius: !0,
  shadow: "popupShadow",
  role: "dialog",
  "aria-modal": !0,
  ...i
})))))));
y.propTypes = {
  labelledBy: r.string.isRequired,
  onClose: r.func.isRequired
};
export {
  y as ModalLayout
};
