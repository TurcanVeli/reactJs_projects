import r, { useState as ee, useRef as te, Children as j, cloneElement as A } from "react";
import e from "prop-types";
import re from "styled-components";
import { Cross as oe, CarretDown as ne } from "@strapi/icons";
import { sizes as ie } from "../themes/sizes.js";
import { SelectButton as le } from "./SelectButton.js";
import { Field as se } from "../Field/Field.js";
import { FieldLabel as ae } from "../Field/FieldLabel.js";
import "../Field/FieldInput.js";
import { FieldHint as pe } from "../Field/FieldHint.js";
import { FieldError as ce } from "../Field/FieldError.js";
import "../Field/FieldContext.js";
import "../Field/FieldAction.js";
import { Popover as me } from "../Popover/Popover.js";
import { Stack as de } from "../Stack/Stack.js";
import { Typography as P } from "../Typography/Typography.js";
import { Flex as C } from "../Flex/Flex.js";
import { Box as _ } from "../Box/Box.js";
import { useId as fe } from "../helpers/useId.js";
import { SelectList as ue } from "./SelectList.js";
import { SelectButtonWrapper as he, IconBox as Ee, CaretBox as be } from "./components.js";
import { useButtonRef as ye } from "./hooks/useButtonRef.js";
import { VisuallyHidden as q } from "../VisuallyHidden/VisuallyHidden.js";
import { DownState as ge } from "./constants.js";
import { escapeSelector as z } from "../helpers/escapeSelector.js";
import { SelectTags as ve } from "./SelectTags.js";
const Be = re(C)`
  width: 100%;
`, G = ({
  label: m,
  labelAction: H,
  id: W,
  children: N,
  customizeContent: d,
  placeholder: y,
  onChange: g,
  value: o,
  hint: v,
  error: f,
  disabled: s,
  clearLabel: I,
  onClear: S,
  onReachEnd: J,
  multi: i,
  required: K,
  selectButtonTitle: Q,
  size: U,
  startIcon: x,
  withTags: u,
  ...X
}) => {
  const n = fe("select", W), [h, E] = ee(void 0), $ = ye(h), R = te(null), w = `${n}-label`, b = `${n}-content`, D = typeof f == "string";
  let B;
  if (D ? B = `${n}-error` : v && (B = `${n}-hint`), u && !i)
    throw new Error('The "withTags" props can only be used when the "multi" prop is present');
  const Y = () => {
    E(void 0);
  }, Z = () => {
    s || (S(), $.current.focus());
  }, L = (t) => {
    t.preventDefault(), !s && (t.nativeEvent.which === 3 || t.nativeEvent.button === 2 || E(ge.Mouse));
  }, O = (t, l = !0) => {
    i ? g(o.includes(t) ? o.filter((a) => a !== t) : [...o, t]) : (g(t), l && E(void 0));
  }, F = (t) => {
    g(
      o.includes(t[0]) ? o.filter((l, a, c) => c.indexOf(l) < 0, t) : [...o, ...t]
    );
  };
  let T, M = [];
  const k = (t, l) => {
    const a = `${n}-option-${t.props.value}`, c = i ? o.includes(t.props.value) : t.props.value === o;
    return c && (u ? M.push({ label: t.props.children, value: t.props.value }) : T = t.props.children), A(t, {
      id: z(a),
      onClick: () => O(t.props.value),
      selected: c,
      multi: i,
      isChild: l
    });
  }, V = j.toArray(N).map((t) => {
    if (t.type.displayName === "OptGroup") {
      const l = `${n}-option-${t.props.label}`, a = t.props.children.every((p) => o.includes(p.props.value)), c = !a && t.props.children.some((p) => o.includes(p.props.value));
      return A(t, {
        id: z(l),
        onClick: () => F(t.props.children.map((p) => p.props.value)),
        selected: a,
        indeterminate: c,
        multi: i,
        children: j.toArray(t.props.children).map((p) => k(p, !0)),
        value: t.props.label
      });
    }
    return k(t);
  });
  return /* @__PURE__ */ r.createElement(se, {
    hint: v,
    error: f,
    id: n,
    required: K
  }, /* @__PURE__ */ r.createElement(de, {
    spacing: m || v || D ? 1 : 0
  }, m && /* @__PURE__ */ r.createElement(ae, {
    action: H
  }, m), /* @__PURE__ */ r.createElement(he, {
    size: U,
    hasError: Boolean(f),
    disabled: s,
    ref: R
  }, /* @__PURE__ */ r.createElement(le, {
    ref: $,
    labelledBy: `${n} ${w} ${b}`,
    "aria-describedby": B,
    expanded: Boolean(h),
    onTrigger: E,
    id: n,
    hasError: Boolean(f),
    disabled: s,
    onMouseDown: L,
    ...X
  }), /* @__PURE__ */ r.createElement(Be, {
    justifyContent: "space-between"
  }, /* @__PURE__ */ r.createElement(C, null, x && /* @__PURE__ */ r.createElement(_, {
    paddingLeft: 3,
    "aria-hidden": !0
  }, x), u && /* @__PURE__ */ r.createElement(ve, {
    tags: M,
    onRemoveTag: O,
    disabled: s
  }), /* @__PURE__ */ r.createElement(_, {
    paddingLeft: 4,
    paddingRight: 4
  }, u ? /* @__PURE__ */ r.createElement(r.Fragment, null, !o || o.length === 0 ? /* @__PURE__ */ r.createElement(P, {
    ellipsis: !0,
    id: b,
    textColor: "neutral600"
  }, y) : null, /* @__PURE__ */ r.createElement(q, {
    as: "span",
    id: b
  }, d ? d(o) : T || y, o.join(", "))) : /* @__PURE__ */ r.createElement(P, {
    ellipsis: !0,
    id: b,
    textColor: o ? "neutral800" : "neutral600"
  }, d ? d(o) : T || y, i && /* @__PURE__ */ r.createElement(q, {
    as: "span"
  }, o.join(", "))))), /* @__PURE__ */ r.createElement(C, null, (i && o && o.length || !i && o) && S && /* @__PURE__ */ r.createElement(Ee, {
    as: "button",
    type: "button",
    onClick: Z,
    "aria-label": I,
    "aria-disabled": s,
    title: I
  }, /* @__PURE__ */ r.createElement(oe, null)), /* @__PURE__ */ r.createElement(be, {
    paddingLeft: 3,
    "aria-hidden": !0,
    as: "button",
    type: "button",
    onMouseDown: L,
    tabIndex: -1,
    disabled: s,
    title: Q
  }, /* @__PURE__ */ r.createElement(ne, null))))), /* @__PURE__ */ r.createElement(pe, null), /* @__PURE__ */ r.createElement(ce, null)), h && /* @__PURE__ */ r.createElement(me, {
    source: R,
    spacing: 4,
    fullWidth: !0,
    intersectionId: `select-list-intersection-${n}`,
    onReachEnd: J
  }, /* @__PURE__ */ r.createElement(ue, {
    selectId: n,
    labelledBy: m ? w : void 0,
    onEscape: Y,
    expanded: h,
    onSelectItem: (t, l) => l ? F(t) : O(t, !1),
    multi: i
  }, V)));
};
G.defaultProps = {
  "aria-label": void 0,
  children: [],
  clearLabel: "Clear",
  customizeContent: void 0,
  disabled: !1,
  id: void 0,
  label: void 0,
  labelAction: void 0,
  multi: !1,
  onChange() {
  },
  onClear: void 0,
  onReachEnd: void 0,
  value: void 0,
  hint: void 0,
  error: void 0,
  placeholder: "Select...",
  required: !1,
  selectButtonTitle: "Carret Down Button",
  size: "M",
  startIcon: void 0,
  withTags: !1
};
G.propTypes = {
  "aria-label": e.string,
  children: e.oneOfType([e.arrayOf(e.node), e.node]),
  clearLabel: e.string,
  customizeContent: e.func,
  disabled: e.bool,
  error: e.oneOfType([e.string, e.bool]),
  hint: e.oneOfType([e.string, e.node, e.arrayOf(e.node)]),
  id: e.oneOfType([e.string, e.number]),
  label: e.string,
  labelAction: e.element,
  multi: e.bool,
  onChange: e.func,
  onClear: e.func,
  onReachEnd: e.func,
  placeholder: e.string,
  required: e.bool,
  selectButtonTitle: e.string,
  size: e.oneOf(Object.keys(ie.input)),
  startIcon: e.element,
  value: e.oneOfType([
    e.arrayOf(e.oneOfType([e.string, e.number])),
    e.string,
    e.number
  ]),
  withTags: e.bool
};
export {
  G as Select
};
