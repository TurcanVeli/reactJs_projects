import t from "react";
import a from "prop-types";
import n from "styled-components";
import { Typography as g } from "../Typography/Typography.js";
import { Box as p } from "../Box/Box.js";
import { Flex as l } from "../Flex/Flex.js";
const u = n(p)`
  svg {
    height: ${8 / 16}rem;
    width: ${8 / 16}rem;
  }

  svg path {
    fill: ${({ theme: r, ...o }) => o["aria-disabled"] ? r.colors.neutral600 : r.colors.primary600};
  }
`, f = n(g)`
  border-right: 1px solid ${({ theme: r, disabled: o }) => o ? r.colors.neutral300 : r.colors.primary200};
  color: inherit;
  padding-right: ${({ theme: r }) => r.spaces[2]};
`, i = ({ children: r, icon: o, disabled: e, onClick: d, ...s }) => {
  const c = (m) => {
    e || d(m);
  };
  return /* @__PURE__ */ t.createElement(u, {
    as: "button",
    background: e ? "neutral200" : "primary100",
    color: e ? "neutral700" : "primary600",
    paddingLeft: 3,
    paddingRight: 3,
    onClick: c,
    "aria-disabled": e,
    borderWidth: "1px",
    borderStyle: "solid",
    borderColor: e ? "neutral300" : "primary200",
    hasRadius: !0,
    height: `${32 / 16}rem`,
    ...s
  }, /* @__PURE__ */ t.createElement(l, null, /* @__PURE__ */ t.createElement(f, {
    disabled: e,
    variant: "pi",
    fontWeight: "bold",
    as: "span"
  }, r), /* @__PURE__ */ t.createElement(p, {
    paddingLeft: 2
  }, /* @__PURE__ */ t.createElement(l, null, o))));
};
i.displayName = "Tag";
i.defaultProps = {
  disabled: !1,
  onClick: void 0
};
i.propTypes = {
  children: a.node.isRequired,
  disabled: a.bool,
  icon: a.element.isRequired,
  onClick: a.func
};
export {
  i as Tag
};
