import i from "styled-components";
import { variantStyle as r, ellipsisStyle as n, handleColor as a } from "./utils.js";
import { extractStyleFromTheme as o } from "../helpers/theme.js";
const s = {
  fontSize: !0,
  fontWeight: !0
}, d = i.span.withConfig({
  shouldForwardProp: (e, t) => !s[e] && t(e)
})`
  ${r}
  ${n}

  // These properties need to come after {variantStyle}, because they might
  // overwrite a variant attribute
  font-weight: ${({
  theme: e,
  fontWeight: t
}) => o(e.fontWeights, t, void 0)};
  font-size: ${({
  theme: e,
  fontSize: t
}) => o(e.fontSizes, t, void 0)};
  line-height: ${({
  theme: e,
  lineHeight: t
}) => o(e.lineHeights, t, void 0)};
  color: ${a};
  text-align: ${({
  textAlign: e
}) => e};
  text-transform: ${({
  textTransform: e
}) => e};
`;
export {
  d as Typography
};
