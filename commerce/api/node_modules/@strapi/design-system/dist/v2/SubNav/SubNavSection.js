import e, { useState as f, Children as b } from "react";
import t from "prop-types";
import h from "styled-components";
import { Box as l } from "../../Box/Box.js";
import { Badge as E } from "../../Badge/Badge.js";
import { Stack as S } from "../../Stack/Stack.js";
import { SubNavSectionLabel as v } from "./SubNavSectionLabel.js";
import { useId as k } from "../../helpers/useId.js";
const C = h(l)`
  svg {
    height: ${4 / 16}rem;
    path {
      fill: ${({ theme: r }) => r.colors.neutral500};
    }
  }
`, p = ({ collapsable: r, label: s, badgeLabel: o, children: d, id: m }) => {
  const [a, c] = f(!0), n = k("subnav-list", m), u = () => {
    c((i) => !i);
  };
  return /* @__PURE__ */ e.createElement(S, {
    spacing: 1
  }, /* @__PURE__ */ e.createElement(C, {
    paddingLeft: 6,
    paddingTop: 2,
    paddingBottom: 2,
    paddingRight: 4
  }, /* @__PURE__ */ e.createElement(l, {
    position: "relative",
    paddingRight: o ? 6 : 0
  }, /* @__PURE__ */ e.createElement(v, {
    onClick: u,
    ariaExpanded: a,
    ariaControls: n,
    collapsable: r,
    label: s
  }), o && /* @__PURE__ */ e.createElement(E, {
    backgroundColor: "neutral150",
    textColor: "neutral600",
    position: "absolute",
    right: 0,
    top: "50%",
    transform: "translateY(-50%)"
  }, o))), (!r || a) && /* @__PURE__ */ e.createElement("ol", {
    id: n
  }, b.map(d, (i, g) => /* @__PURE__ */ e.createElement("li", {
    key: g
  }, i))));
};
p.defaultProps = {
  badgeLabel: null,
  collapsable: !1,
  id: void 0
};
p.propTypes = {
  badgeLabel: t.string,
  children: t.node.isRequired,
  collapsable: t.bool,
  id: t.string,
  label: t.string.isRequired
};
export {
  p as SubNavSection
};
